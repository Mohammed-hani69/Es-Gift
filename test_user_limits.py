#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Test User Limits Creation
========================

ุณูุฑูุจุช ุงุฎุชุจุงุฑ ููุญุต ุฅูุดุงุก ุญุฏูุฏ ุงููุณุชุฎุฏููู ุนูุฏ ุงูุชุณุฌูู

Author: ES-Gift Development Team
Created: 2025
"""

from app import app
from models import db, User, UserLimits, GlobalLimits
from wallet_utils import create_user_limits, ensure_default_limits_exist
from werkzeug.security import generate_password_hash
import datetime

def test_user_limits_creation():
    """ุงุฎุชุจุงุฑ ุฅูุดุงุก ุญุฏูุฏ ุงููุณุชุฎุฏู ุนูุฏ ุงูุชุณุฌูู"""
    with app.app_context():
        print("๐งช ุจุฏุก ุงุฎุชุจุงุฑ ุฅูุดุงุก ุญุฏูุฏ ุงููุณุชุฎุฏููู...")
        
        # ุงูุชุฃูุฏ ูู ูุฌูุฏ ุงูุญุฏูุฏ ุงูุงูุชุฑุงุถูุฉ
        print("๐ ุงูุชุญูู ูู ุงูุญุฏูุฏ ุงูุงูุชุฑุงุถูุฉ...")
        ensure_default_limits_exist()
        
        # ุนุฑุถ ุงูุญุฏูุฏ ุงูุงูุชุฑุงุถูุฉ ุงูููุฌูุฏุฉ
        global_limits = GlobalLimits.query.all()
        print(f"โ ุชู ุงูุนุซูุฑ ุนูู {len(global_limits)} ููุน ูู ุงูุญุฏูุฏ ุงูุงูุชุฑุงุถูุฉ:")
        for limit in global_limits:
            print(f"   - {limit.display_name} ({limit.user_type}): ูููู ${limit.daily_limit_usd}, ุดูุฑู ${limit.monthly_limit_usd}")
        
        # ุฅูุดุงุก ูุณุชุฎุฏู ุงุฎุชุจุงุฑ
        test_email = f"test_user_{datetime.datetime.now().strftime('%Y%m%d_%H%M%S')}@example.com"
        print(f"\n๐ค ุฅูุดุงุก ูุณุชุฎุฏู ุงุฎุชุจุงุฑ: {test_email}")
        
        # ุญุฐู ุงููุณุชุฎุฏู ุงูุงุฎุชุจุงุฑ ุฅุฐุง ูุงู ููุฌูุฏุงู
        existing_user = User.query.filter_by(email=test_email).first()
        if existing_user:
            UserLimits.query.filter_by(user_id=existing_user.id).delete()
            db.session.delete(existing_user)
            db.session.commit()
        
        # ุฅูุดุงุก ุงููุณุชุฎุฏู ุงูุฌุฏูุฏ
        test_user = User(
            email=test_email,
            full_name="ูุณุชุฎุฏู ุงุฎุชุจุงุฑ",
            password_hash=generate_password_hash("test123"),
            created_at=datetime.datetime.utcnow()
        )
        
        db.session.add(test_user)
        db.session.flush()  # ููุญุตูู ุนูู ID
        
        print(f"โ ุชู ุฅูุดุงุก ุงููุณุชุฎุฏู ุจู ID: {test_user.id}")
        
        # ุฅูุดุงุก ุญุฏูุฏ ุงููุณุชุฎุฏู
        print("๐ฐ ุฅูุดุงุก ุญุฏูุฏ ุงููุณุชุฎุฏู...")
        user_limits = create_user_limits(test_user)
        
        if user_limits:
            print("โ ุชู ุฅูุดุงุก ุญุฏูุฏ ุงููุณุชุฎุฏู ุจูุฌุงุญ:")
            print(f"   - ุงูุญุฏ ุงููููู: ${user_limits.daily_limit_usd}")
            print(f"   - ุงูุญุฏ ุงูุดูุฑู: ${user_limits.monthly_limit_usd}")
            print(f"   - ููุน ุงูุญุฏูุฏ: {'ูุฎุตุตุฉ' if user_limits.is_custom else 'ุงูุชุฑุงุถูุฉ'}")
            print(f"   - ุงููููู ุงููููู: ${user_limits.daily_spent_usd}")
            print(f"   - ุงููููู ุงูุดูุฑู: ${user_limits.monthly_spent_usd}")
        else:
            print("โ ูุดู ูู ุฅูุดุงุก ุญุฏูุฏ ุงููุณุชุฎุฏู")
            return False
        
        # ุญูุธ ุงูุชุบููุฑุงุช
        db.session.commit()
        print("๐พ ุชู ุญูุธ ุงูุจูุงูุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช")
        
        # ุงูุชุญูู ูู ุงูุญูุธ
        saved_user = User.query.filter_by(email=test_email).first()
        saved_limits = UserLimits.query.filter_by(user_id=saved_user.id).first()
        
        if saved_user and saved_limits:
            print("โ ุชู ุงูุชุญูู ูู ุญูุธ ุงูุจูุงูุงุช ุจูุฌุงุญ")
            print(f"   - ุงููุณุชุฎุฏู: {saved_user.email}")
            print(f"   - ุงูุญุฏูุฏ: ูููู ${saved_limits.daily_limit_usd}, ุดูุฑู ${saved_limits.monthly_limit_usd}")
        else:
            print("โ ูุดู ูู ุงูุชุญูู ูู ุญูุธ ุงูุจูุงูุงุช")
            return False
        
        # ุชูุธูู ุจูุงูุงุช ุงูุงุฎุชุจุงุฑ
        print("\n๐งน ุชูุธูู ุจูุงูุงุช ุงูุงุฎุชุจุงุฑ...")
        db.session.delete(saved_limits)
        db.session.delete(saved_user)
        db.session.commit()
        print("โ ุชู ุชูุธูู ุจูุงูุงุช ุงูุงุฎุชุจุงุฑ")
        
        print("\n๐ ุงูุชูู ุงูุงุฎุชุจุงุฑ ุจูุฌุงุญ! ุงููุธุงู ูุนูู ุจุดูู ุตุญูุญ.")
        return True

def show_all_limits():
    """ุนุฑุถ ุฌููุน ุงูุญุฏูุฏ ุงูููุฌูุฏุฉ ูู ุงููุธุงู"""
    with app.app_context():
        print("๐ ุนุฑุถ ุฌููุน ุงูุญุฏูุฏ ูู ุงููุธุงู:")
        
        print("\n๐ ุงูุญุฏูุฏ ุงูุงูุชุฑุงุถูุฉ:")
        global_limits = GlobalLimits.query.order_by(GlobalLimits.user_type).all()
        for limit in global_limits:
            status = "ูุดุท" if limit.is_active else "ุบูุฑ ูุดุท"
            print(f"   - {limit.display_name} ({limit.user_type}): ูููู ${limit.daily_limit_usd}, ุดูุฑู ${limit.monthly_limit_usd} - {status}")
        
        print(f"\n๐ฅ ุญุฏูุฏ ุงููุณุชุฎุฏููู (ุงูุนุฏุฏ ุงูุฅุฌูุงูู: {UserLimits.query.count()}):")
        user_limits = UserLimits.query.join(User).limit(10).all()
        for limit in user_limits:
            limit_type = "ูุฎุตุตุฉ" if limit.is_custom else "ุงูุชุฑุงุถูุฉ"
            print(f"   - {limit.user.email}: ูููู ${limit.daily_limit_usd}, ุดูุฑู ${limit.monthly_limit_usd} ({limit_type})")
        
        if UserLimits.query.count() > 10:
            print(f"   ... ู {UserLimits.query.count() - 10} ูุณุชุฎุฏู ุขุฎุฑ")

if __name__ == "__main__":
    print("๐ง ุจุฏุก ุงุฎุชุจุงุฑ ูุธุงู ุญุฏูุฏ ุงููุณุชุฎุฏููู...")
    
    # ุนุฑุถ ุงูุญุฏูุฏ ุงูููุฌูุฏุฉ
    show_all_limits()
    
    print("\n" + "="*60 + "\n")
    
    # ุงุฎุชุจุงุฑ ุฅูุดุงุก ุญุฏูุฏ ุฌุฏูุฏุฉ
    success = test_user_limits_creation()
    
    if success:
        print(f"\nโ ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ูุฌุญุช! ุงููุธุงู ุฌุงูุฒ ููุงุณุชุฎุฏุงู.")
    else:
        print(f"\nโ ูุดู ูู ุจุนุถ ุงูุงุฎุชุจุงุฑุงุช. ูุฑุฌู ูุฑุงุฌุนุฉ ุงูุฃุฎุทุงุก.")
